{"ast":null,"code":"// import './App.css';\n// import {useState} from \"react\";\n// import AddTarget from \"./AddTarget\";\n// import CountChange from \"./CountChange\";\n//\n//\n// function App(){\n//     const [workers, setWorkers] = useState([\n//         {id:1, name: 'Samuel', surname: 'Jacson', count: 20, salary: 130},\n//         {id:2,name: 'Jam', surname: 'Luise', count: 23, salary: 110},\n//         {id:3,name: 'Katy', surname: 'Smitt', count: 20, salary: 100},\n//         {id:4,name: 'Julia', surname: 'Krosbi', count: 22, salary: 140},\n//         {id:5,name: 'Sam', surname: 'Venson', count: 22, salary: 160}\n//     ])\n//\n//     const createItem = (newItems) => {\n//         setWorkers([...workers, newItems])\n//     }\n//\n//     const changeItem = (newCount) => {\n//         setWorkers({...workers, count: newCount})\n//     }\n//\n//     return(\n//         <>\n//             <table>\n//                 <thead>\n//                 <tr>\n//                     <th> Name </th>\n//                     <th> Surname </th>\n//                     <th> Count days </th>\n//                     <th> Salary per day </th>\n//                     <th> Salary per month </th>\n//                 </tr>\n//                 </thead>\n//                 <tbody>\n//                 {workers.map(worker => (\n//                     <tr key={worker.id}>\n//                         <td>{worker.name}</td>\n//                         <td>{worker.surname}</td>\n//                         <CountChange\n//                         cnange={changeItem}\n//                         />\n//                         <td>{worker.salary}</td>\n//                         <td>{worker.salary * worker.count}</td>\n//                     </tr>\n//                 ))}\n//                 </tbody>\n//             </table>\n//\n//\n//             <AddTarget\n//             add={createItem}\n//             />\n//\n//\n//\n//             {/*<table>*/}\n//             {/*    <thead>*/}\n//             {/*    <tr>*/}\n//             {/*        <th> Name </th>*/}\n//             {/*        <th> Surname </th>*/}\n//             {/*        <th> Count days </th>*/}\n//             {/*        <th> Salary per day </th>*/}\n//             {/*        <th> Salary per month </th>*/}\n//             {/*    </tr>*/}\n//             {/*    </thead>*/}\n//             {/*    <tbody>*/}\n//             {/*    {workers.map(worker => (*/}\n//             {/*        <tr key={worker.id}>*/}\n//             {/*            <td>{worker.name}</td>*/}\n//             {/*            <td>{worker.surname}</td>*/}\n//             {/*            <input onChange={countChangeHandler} value={worker.count} />*/}\n//             {/*            <td>{worker.salary}</td>*/}\n//             {/*            <td>{worker.salary * worker.count}</td>*/}\n//             {/*        </tr>*/}\n//             {/*    ))}*/}\n//             {/*    </tbody>*/}\n//             {/*</table>*/}\n//\n//\n// </>\n//         )\n//\n// }\n//\n// export default App;\nconst initNotes = [{\n  id: id(),\n  fields: [{\n    name: 'prop1',\n    value: 'value11',\n    isEdit: false\n  }, {\n    name: 'prop2',\n    value: 'value12',\n    isEdit: false\n  }, {\n    name: 'prop3',\n    value: 'value13',\n    isEdit: false\n  }]\n}, {\n  id: id(),\n  fields: [{\n    name: 'prop1',\n    value: 'value21',\n    isEdit: false\n  }, {\n    name: 'prop2',\n    value: 'value22',\n    isEdit: false\n  }, {\n    name: 'prop3',\n    value: 'value23',\n    isEdit: false\n  }]\n}, {\n  id: id(),\n  fields: [{\n    name: 'prop1',\n    value: 'value31',\n    isEdit: false\n  }, {\n    name: 'prop2',\n    value: 'value32',\n    isEdit: false\n  }, {\n    name: 'prop3',\n    value: 'value33',\n    isEdit: false\n  }]\n}];","map":{"version":3,"names":["initNotes","id","fields","name","value","isEdit"],"sources":["/Users/user/Documents/React.Hillel/react-practice/src/App.js"],"sourcesContent":["// import './App.css';\n// import {useState} from \"react\";\n// import AddTarget from \"./AddTarget\";\n// import CountChange from \"./CountChange\";\n//\n//\n// function App(){\n//     const [workers, setWorkers] = useState([\n//         {id:1, name: 'Samuel', surname: 'Jacson', count: 20, salary: 130},\n//         {id:2,name: 'Jam', surname: 'Luise', count: 23, salary: 110},\n//         {id:3,name: 'Katy', surname: 'Smitt', count: 20, salary: 100},\n//         {id:4,name: 'Julia', surname: 'Krosbi', count: 22, salary: 140},\n//         {id:5,name: 'Sam', surname: 'Venson', count: 22, salary: 160}\n//     ])\n//\n//     const createItem = (newItems) => {\n//         setWorkers([...workers, newItems])\n//     }\n//\n//     const changeItem = (newCount) => {\n//         setWorkers({...workers, count: newCount})\n//     }\n//\n//     return(\n//         <>\n//             <table>\n//                 <thead>\n//                 <tr>\n//                     <th> Name </th>\n//                     <th> Surname </th>\n//                     <th> Count days </th>\n//                     <th> Salary per day </th>\n//                     <th> Salary per month </th>\n//                 </tr>\n//                 </thead>\n//                 <tbody>\n//                 {workers.map(worker => (\n//                     <tr key={worker.id}>\n//                         <td>{worker.name}</td>\n//                         <td>{worker.surname}</td>\n//                         <CountChange\n//                         cnange={changeItem}\n//                         />\n//                         <td>{worker.salary}</td>\n//                         <td>{worker.salary * worker.count}</td>\n//                     </tr>\n//                 ))}\n//                 </tbody>\n//             </table>\n//\n//\n//             <AddTarget\n//             add={createItem}\n//             />\n//\n//\n//\n//             {/*<table>*/}\n//             {/*    <thead>*/}\n//             {/*    <tr>*/}\n//             {/*        <th> Name </th>*/}\n//             {/*        <th> Surname </th>*/}\n//             {/*        <th> Count days </th>*/}\n//             {/*        <th> Salary per day </th>*/}\n//             {/*        <th> Salary per month </th>*/}\n//             {/*    </tr>*/}\n//             {/*    </thead>*/}\n//             {/*    <tbody>*/}\n//             {/*    {workers.map(worker => (*/}\n//             {/*        <tr key={worker.id}>*/}\n//             {/*            <td>{worker.name}</td>*/}\n//             {/*            <td>{worker.surname}</td>*/}\n//             {/*            <input onChange={countChangeHandler} value={worker.count} />*/}\n//             {/*            <td>{worker.salary}</td>*/}\n//             {/*            <td>{worker.salary * worker.count}</td>*/}\n//             {/*        </tr>*/}\n//             {/*    ))}*/}\n//             {/*    </tbody>*/}\n//             {/*</table>*/}\n//\n//\n// </>\n//         )\n//\n// }\n//\n// export default App;\n\nconst initNotes = [\n    {\n        id: id(),\n        fields: [\n            {name: 'prop1', value: 'value11', isEdit: false},\n            {name: 'prop2', value: 'value12', isEdit: false},\n            {name: 'prop3', value: 'value13', isEdit: false},\n        ]\n    },\n    {\n        id: id(),\n        fields: [\n            {name: 'prop1', value: 'value21', isEdit: false},\n            {name: 'prop2', value: 'value22', isEdit: false},\n            {name: 'prop3', value: 'value23', isEdit: false},\n        ]\n    },\n    {\n        id: id(),\n        fields: [\n            {name: 'prop1', value: 'value31', isEdit: false},\n            {name: 'prop2', value: 'value32', isEdit: false},\n            {name: 'prop3', value: 'value33', isEdit: false},\n        ]\n    },\n];"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,SAAS,GAAG,CACd;EACIC,EAAE,EAAEA,EAAE,EADV;EAEIC,MAAM,EAAE,CACJ;IAACC,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CADI,EAEJ;IAACF,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CAFI,EAGJ;IAACF,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CAHI;AAFZ,CADc,EASd;EACIJ,EAAE,EAAEA,EAAE,EADV;EAEIC,MAAM,EAAE,CACJ;IAACC,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CADI,EAEJ;IAACF,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CAFI,EAGJ;IAACF,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CAHI;AAFZ,CATc,EAiBd;EACIJ,EAAE,EAAEA,EAAE,EADV;EAEIC,MAAM,EAAE,CACJ;IAACC,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CADI,EAEJ;IAACF,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CAFI,EAGJ;IAACF,IAAI,EAAE,OAAP;IAAgBC,KAAK,EAAE,SAAvB;IAAkCC,MAAM,EAAE;EAA1C,CAHI;AAFZ,CAjBc,CAAlB"},"metadata":{},"sourceType":"module"}