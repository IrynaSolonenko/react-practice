{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/react-practice/src/App.js\";\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [workers, setWorkers] = useState([\n  //     {id:1, name: 'Samuel', surname: 'Jacson', count: 20, salary: 130},\n  //     {id:2,name: 'Jam', surname: 'Luise', count: 23, salary: 110},\n  //     {id:3,name: 'Katy', surname: 'Smitt', count: 20, salary: 100},\n  //     {id:4,name: 'Julia', surname: 'Krosbi', count: 22, salary: 140},\n  //     {id:5,name: 'Sam', surname: 'Venson', count: 22, salary: 160}\n  // ])\n  //\n  // const [newValue, setNewValue] = useState('');\n  //\n  //     const countChangeHandler = (e) => {\n  //         setNewValue(e.target.value)\n  //     }\n  return (\n    /*#__PURE__*/\n    // <table>\n    //     <thead>\n    //     <tr>\n    //         <th> Name </th>\n    //         <th> Surname </th>\n    //         <th> Count days </th>\n    //         <th> Salary per day </th>\n    //         <th> Salary per month </th>\n    //     </tr>\n    //     </thead>\n    //     <tbody>\n    //     {workers.map(worker => (\n    //         <tr key={worker.id}>\n    //             <td>{worker.name}</td>\n    //             <td>{worker.surname}</td>\n    //             <input onChange={countChangeHandler} value={newValue} />\n    //             <button onClick={addItem}>change</button>\n    //             <td>{worker.salary}</td>\n    //             <td>{worker.salary * worker.count}</td>\n    //         </tr>\n    //     ))}\n    //     </tbody>\n    // </table>\n    _jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App"],"sources":["/Users/user/Documents/React.Hillel/react-practice/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\n\nfunction App(){\n    // const [workers, setWorkers] = useState([\n    //     {id:1, name: 'Samuel', surname: 'Jacson', count: 20, salary: 130},\n    //     {id:2,name: 'Jam', surname: 'Luise', count: 23, salary: 110},\n    //     {id:3,name: 'Katy', surname: 'Smitt', count: 20, salary: 100},\n    //     {id:4,name: 'Julia', surname: 'Krosbi', count: 22, salary: 140},\n    //     {id:5,name: 'Sam', surname: 'Venson', count: 22, salary: 160}\n    // ])\n    //\n    // const [newValue, setNewValue] = useState('');\n    //\n    //     const countChangeHandler = (e) => {\n    //         setNewValue(e.target.value)\n    //     }\n\n\n\n\n\n\n    \n    return(\n            // <table>\n            //     <thead>\n            //     <tr>\n            //         <th> Name </th>\n            //         <th> Surname </th>\n            //         <th> Count days </th>\n            //         <th> Salary per day </th>\n            //         <th> Salary per month </th>\n            //     </tr>\n            //     </thead>\n            //     <tbody>\n            //     {workers.map(worker => (\n            //         <tr key={worker.id}>\n            //             <td>{worker.name}</td>\n            //             <td>{worker.surname}</td>\n            //             <input onChange={countChangeHandler} value={newValue} />\n            //             <button onClick={addItem}>change</button>\n            //             <td>{worker.salary}</td>\n            //             <td>{worker.salary * worker.count}</td>\n            //         </tr>\n            //     ))}\n            //     </tbody>\n            // </table>\n        <div>\n\n        </div>\n        )\n\n}\n\nexport default App;"],"mappings":";AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;AAGA,SAASC,GAAT,GAAc;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAQA;IAAA;IACQ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;MAAA;MAAA;MAAA;IAAA;EAxBJ;AA6BH;;KAlDQA,G;AAoDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}