{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/react-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\"; // import AddTarget from \"./AddTarget\";\n// import CountChange from \"./CountChange\";\n//\n\nimport EditableTable from './EditableTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [workers, setWorkers] = useState([{\n    id: 1,\n    name: 'Samuel',\n    surname: 'Jacson',\n    count: 20,\n    salary: 130\n  }, {\n    id: 2,\n    name: 'Jam',\n    surname: 'Luise',\n    count: 23,\n    salary: 110\n  }, {\n    id: 3,\n    name: 'Katy',\n    surname: 'Smitt',\n    count: 20,\n    salary: 100\n  }, {\n    id: 4,\n    name: 'Julia',\n    surname: 'Krosbi',\n    count: 22,\n    salary: 140\n  }, {\n    id: 5,\n    name: 'Sam',\n    surname: 'Venson',\n    count: 22,\n    salary: 160\n  }]); //\n  //     const createItem = (newItems) => {\n  //         setWorkers([...workers, newItems])\n  //     }\n  //\n  //     const changeItem = (newCount) => {\n  //         setWorkers({...workers, count: newCount})\n  //     }\n  //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EditableTable, {\n      columns: columns,\n      rows: data,\n      actions: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false) //         <>\n  //             <table>\n  //                 <thead>\n  //                 <tr>\n  //                     <th> Name </th>\n  //                     <th> Surname </th>\n  //                     <th> Count days </th>\n  //                     <th> Salary per day </th>\n  //                     <th> Salary per month </th>\n  //                 </tr>\n  //                 </thead>\n  //                 <tbody>\n  //                 {workers.map(worker => (\n  //                     <tr key={worker.id}>\n  //                         <td>{worker.name}</td>\n  //                         <td>{worker.surname}</td>\n  //                         <CountChange\n  //                         cnange={changeItem}\n  //                         />\n  //                         <td>{worker.salary}</td>\n  //                         <td>{worker.salary * worker.count}</td>\n  //                     </tr>\n  //                 ))}\n  //                 </tbody>\n  //             </table>\n  //\n  //\n  //             <AddTarget\n  //             add={createItem}\n  //             />\n  //\n  //\n  //\n  //             {/*<table>*/}\n  //             {/*    <thead>*/}\n  //             {/*    <tr>*/}\n  //             {/*        <th> Name </th>*/}\n  //             {/*        <th> Surname </th>*/}\n  //             {/*        <th> Count days </th>*/}\n  //             {/*        <th> Salary per day </th>*/}\n  //             {/*        <th> Salary per month </th>*/}\n  //             {/*    </tr>*/}\n  //             {/*    </thead>*/}\n  //             {/*    <tbody>*/}\n  //             {/*    {workers.map(worker => (*/}\n  //             {/*        <tr key={worker.id}>*/}\n  //             {/*            <td>{worker.name}</td>*/}\n  //             {/*            <td>{worker.surname}</td>*/}\n  //             {/*            <input onChange={countChangeHandler} value={worker.count} />*/}\n  //             {/*            <td>{worker.salary}</td>*/}\n  //             {/*            <td>{worker.salary * worker.count}</td>*/}\n  //             {/*        </tr>*/}\n  //             {/*    ))}*/}\n  //             {/*    </tbody>*/}\n  //             {/*</table>*/}\n  //\n  //\n  // </>\n  ; //\n} //\n// export default App;\n\n\n_s(App, \"8CPvD26B+6xHlsqDLJ3pAA5nJXQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","EditableTable","App","workers","setWorkers","id","name","surname","count","salary","columns","data"],"sources":["/Users/user/Documents/React.Hillel/react-practice/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n// import AddTarget from \"./AddTarget\";\n// import CountChange from \"./CountChange\";\n//\nimport EditableTable from './EditableTable'\n\n\nfunction App(){\n    const [workers, setWorkers] = useState([\n        {id:1, name: 'Samuel', surname: 'Jacson', count: 20, salary: 130},\n        {id:2,name: 'Jam', surname: 'Luise', count: 23, salary: 110},\n        {id:3,name: 'Katy', surname: 'Smitt', count: 20, salary: 100},\n        {id:4,name: 'Julia', surname: 'Krosbi', count: 22, salary: 140},\n        {id:5,name: 'Sam', surname: 'Venson', count: 22, salary: 160}\n    ])\n//\n//     const createItem = (newItems) => {\n//         setWorkers([...workers, newItems])\n//     }\n//\n//     const changeItem = (newCount) => {\n//         setWorkers({...workers, count: newCount})\n//     }\n//\n    return(\n\n        <>\n            <EditableTable columns={columns} rows={data} actions />\n        </>\n\n//         <>\n//             <table>\n//                 <thead>\n//                 <tr>\n//                     <th> Name </th>\n//                     <th> Surname </th>\n//                     <th> Count days </th>\n//                     <th> Salary per day </th>\n//                     <th> Salary per month </th>\n//                 </tr>\n//                 </thead>\n//                 <tbody>\n//                 {workers.map(worker => (\n//                     <tr key={worker.id}>\n//                         <td>{worker.name}</td>\n//                         <td>{worker.surname}</td>\n//                         <CountChange\n//                         cnange={changeItem}\n//                         />\n//                         <td>{worker.salary}</td>\n//                         <td>{worker.salary * worker.count}</td>\n//                     </tr>\n//                 ))}\n//                 </tbody>\n//             </table>\n//\n//\n//             <AddTarget\n//             add={createItem}\n//             />\n//\n//\n//\n//             {/*<table>*/}\n//             {/*    <thead>*/}\n//             {/*    <tr>*/}\n//             {/*        <th> Name </th>*/}\n//             {/*        <th> Surname </th>*/}\n//             {/*        <th> Count days </th>*/}\n//             {/*        <th> Salary per day </th>*/}\n//             {/*        <th> Salary per month </th>*/}\n//             {/*    </tr>*/}\n//             {/*    </thead>*/}\n//             {/*    <tbody>*/}\n//             {/*    {workers.map(worker => (*/}\n//             {/*        <tr key={worker.id}>*/}\n//             {/*            <td>{worker.name}</td>*/}\n//             {/*            <td>{worker.surname}</td>*/}\n//             {/*            <input onChange={countChangeHandler} value={worker.count} />*/}\n//             {/*            <td>{worker.salary}</td>*/}\n//             {/*            <td>{worker.salary * worker.count}</td>*/}\n//             {/*        </tr>*/}\n//             {/*    ))}*/}\n//             {/*    </tbody>*/}\n//             {/*</table>*/}\n//\n//\n// </>\n        )\n//\n}\n//\n// export default App;\n\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB,C,CACA;AACA;AACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAGA,SAASC,GAAT,GAAc;EAAA;;EACV,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,CACnC;IAACK,EAAE,EAAC,CAAJ;IAAOC,IAAI,EAAE,QAAb;IAAuBC,OAAO,EAAE,QAAhC;IAA0CC,KAAK,EAAE,EAAjD;IAAqDC,MAAM,EAAE;EAA7D,CADmC,EAEnC;IAACJ,EAAE,EAAC,CAAJ;IAAMC,IAAI,EAAE,KAAZ;IAAmBC,OAAO,EAAE,OAA5B;IAAqCC,KAAK,EAAE,EAA5C;IAAgDC,MAAM,EAAE;EAAxD,CAFmC,EAGnC;IAACJ,EAAE,EAAC,CAAJ;IAAMC,IAAI,EAAE,MAAZ;IAAoBC,OAAO,EAAE,OAA7B;IAAsCC,KAAK,EAAE,EAA7C;IAAiDC,MAAM,EAAE;EAAzD,CAHmC,EAInC;IAACJ,EAAE,EAAC,CAAJ;IAAMC,IAAI,EAAE,OAAZ;IAAqBC,OAAO,EAAE,QAA9B;IAAwCC,KAAK,EAAE,EAA/C;IAAmDC,MAAM,EAAE;EAA3D,CAJmC,EAKnC;IAACJ,EAAE,EAAC,CAAJ;IAAMC,IAAI,EAAE,KAAZ;IAAmBC,OAAO,EAAE,QAA5B;IAAsCC,KAAK,EAAE,EAA7C;IAAiDC,MAAM,EAAE;EAAzD,CALmC,CAAD,CAAtC,CADU,CAQd;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EACI,oBAEI;IAAA,uBACI,QAAC,aAAD;MAAe,OAAO,EAAEC,OAAxB;MAAiC,IAAI,EAAEC,IAAvC;MAA6C,OAAO;IAApD;MAAA;MAAA;MAAA;IAAA;EADJ,iBAFJ,CAMJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EA/DI,CAjBU,CAkFd;AACC,C,CACD;AACA;;;GArFST,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}