{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/react-practice/src/workersSalaries/WorkersSalary.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport AddTarget from \"./AddTarget\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst WorkersSalary = () => {\n  _s();\n\n  const work = [{\n    name: 'Samuel',\n    surname: 'Jacson',\n    count: 20,\n    salary: 130,\n    isEdit: false\n  }, {\n    name: 'Jam',\n    surname: 'Luise',\n    count: 23,\n    salary: 110,\n    isEdit: false\n  }, {\n    name: 'Katy',\n    surname: 'Smitt',\n    count: 20,\n    salary: 100,\n    isEdit: false\n  }, {\n    name: 'Julia',\n    surname: 'Krosbi',\n    count: 22,\n    salary: 140,\n    isEdit: false\n  }, {\n    name: 'Sam',\n    surname: 'Venson',\n    count: 22,\n    salary: 160,\n    isEdit: false\n  }];\n  const [workers, setWorkers] = useState(work);\n  const [salary, setSalary] = useState('0');\n\n  function startEdit(index) {\n    const copy = Object.assign([], workers);\n    copy[index].isEdit = true;\n    setWorkers(copy);\n  }\n\n  function endEdit(index) {\n    const copy = Object.assign([], workers);\n    copy[index].isEdit = false;\n    setWorkers(copy);\n  }\n\n  function changeNote(index, event) {\n    const copy = Object.assign([], workers);\n    copy[index].count = event.target.value;\n    setWorkers(copy);\n  }\n\n  const result = workers.map((worker, index) => {\n    let elem;\n\n    if (!worker.isEdit) {\n      elem = /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => startEdit(index),\n        children: [worker.count, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 20\n      }, this);\n    } else {\n      elem = /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => changeNote(index, e),\n        value: worker.count,\n        onBlur: () => endEdit(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 20\n      }, this);\n    }\n\n    return elem;\n  });\n\n  const createItem = newItem => {\n    setWorkers([...workers, newItem]);\n  };\n\n  const fullSalary = () => {\n    let salaries = workers.reduce((sum, worker) => worker.salary * worker.count + sum, 0);\n    console.log(salaries);\n    return setSalary(salaries);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Name \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Surname \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Count days \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Salary per day \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Salary per month \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: workers.map((worker, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: worker.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: worker.surname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: result[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: worker.salary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: worker.salary * worker.count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddTarget, {\n        add: createItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fullSalary,\n        children: \"\\uD83D\\uDCB0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: salary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(WorkersSalary, \"K7pugCvXb9y21KQym71v94eEMzg=\");\n\n_c = WorkersSalary;\nexport default WorkersSalary;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkersSalary\");","map":{"version":3,"names":["React","AddTarget","useState","WorkersSalary","work","name","surname","count","salary","isEdit","workers","setWorkers","setSalary","startEdit","index","copy","Object","assign","endEdit","changeNote","event","target","value","result","map","worker","elem","e","createItem","newItem","fullSalary","salaries","reduce","sum","console","log"],"sources":["/Users/user/Documents/React.Hillel/react-practice/src/workersSalaries/WorkersSalary.js"],"sourcesContent":["import React from 'react';\nimport AddTarget from \"./AddTarget\";\nimport {useState} from \"react\";\n\nconst WorkersSalary = () => {\n    const work = [\n        {name: 'Samuel', surname: 'Jacson', count: 20, salary: 130, isEdit:false},\n        {name: 'Jam', surname: 'Luise', count: 23, salary: 110, isEdit:false},\n        {name: 'Katy', surname: 'Smitt', count: 20, salary: 100, isEdit:false},\n        {name: 'Julia', surname: 'Krosbi', count: 22, salary: 140, isEdit:false},\n        {name: 'Sam', surname: 'Venson', count: 22, salary: 160, isEdit:false}\n    ]\n\n    const [workers, setWorkers] = useState(work);\n    const [salary, setSalary] = useState('0');\n\n\n    function startEdit(index) {\n        const copy = Object.assign([], workers);\n        copy[index].isEdit = true;\n        setWorkers(copy);\n    }\n\n    function endEdit(index) {\n        const copy = Object.assign([], workers);\n        copy[index].isEdit = false;\n        setWorkers(copy);\n    }\n\n    function changeNote(index, event) {\n        const copy = Object.assign([], workers);\n        copy[index].count = event.target.value;\n        setWorkers(copy);\n    }\n\n    const result = workers.map((worker, index)=>{\n        let elem;\n        if (!worker.isEdit){\n            elem = <span onClick={()=>startEdit(index)}>{worker.count} </span>\n        } else {\n            elem = <input\n                onChange={e=>changeNote(index, e)}\n                value={worker.count}\n                onBlur={() => endEdit(index)}\n            />\n        }\n\n        return elem\n    })\n\n    const createItem = (newItem) => {\n        setWorkers([...workers, newItem])\n    }\n\n    const fullSalary = () => {\n        let salaries = workers.reduce((sum, worker)=>(worker.salary * worker.count) + sum, 0)\n        console.log(salaries);\n        return setSalary(salaries)\n    }\n\n\n    return (\n        <>\n            <div>\n                <table>\n                    <thead>\n                    <tr>\n                        <th> Name </th>\n                        <th> Surname </th>\n                        <th> Count days </th>\n                        <th> Salary per day </th>\n                        <th> Salary per month </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {workers.map((worker, index) => (\n                        <tr key={index}>\n                            <td>{worker.name}</td>\n                            <td>{worker.surname}</td>\n                            <td>{result[index]}</td>\n                            <td>{worker.salary}</td>\n                            <td>{worker.salary * worker.count}</td>\n                        </tr>\n                    ))}\n                    </tbody>\n                </table>\n                <AddTarget\n                    add={createItem}\n                />\n\n                <button onClick={fullSalary}>💰</button>\n                <p>{salary}</p>\n            </div>\n        </>\n    );\n};\n\nexport default WorkersSalary;"],"mappings":"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"},"metadata":{},"sourceType":"module"}