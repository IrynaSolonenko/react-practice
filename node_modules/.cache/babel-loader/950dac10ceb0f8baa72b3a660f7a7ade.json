{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/react-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // const [workers, setWorkers] = useState([\n  //     {id:1, name: 'Samuel', surname: 'Jacson', count: 20, salary: 130},\n  //     {id:2,name: 'Jam', surname: 'Luise', count: 23, salary: 110},\n  //     {id:3,name: 'Katy', surname: 'Smitt', count: 20, salary: 100},\n  //     {id:4,name: 'Julia', surname: 'Krosbi', count: 22, salary: 140},\n  //     {id:5,name: 'Sam', surname: 'Venson', count: 22, salary: 160}\n  // ])\n  //\n  // const [newValue, setNewValue] = useState('');\n  //\n  //     const countChangeHandler = (e) => {\n  //         setNewValue(e.target.value)\n  //     }\n  const [notes, setNotes] = useState([1, 2, 3, 4, 5]);\n  const [list, setList] = useState('');\n  const result = notes.map((note, index) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: note\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }); // const addHandler = () => {\n  //     setNotes([...notes, result])\n  // }\n\n  return (\n    /*#__PURE__*/\n    // <table>\n    //     <thead>\n    //     <tr>\n    //         <th> Name </th>\n    //         <th> Surname </th>\n    //         <th> Count days </th>\n    //         <th> Salary per day </th>\n    //         <th> Salary per month </th>\n    //     </tr>\n    //     </thead>\n    //     <tbody>\n    //     {workers.map(worker => (\n    //         <tr key={worker.id}>\n    //             <td>{worker.name}</td>\n    //             <td>{worker.surname}</td>\n    //             <input onChange={countChangeHandler} value={newValue} />\n    //             <button onClick={addItem}>change</button>\n    //             <td>{worker.salary}</td>\n    //             <td>{worker.salary * worker.count}</td>\n    //         </tr>\n    //     ))}\n    //     </tbody>\n    // </table>\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", result]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setNotes([...notes, e.target.value]),\n        value: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(App, \"oC8W+DuyrjL88ENXi9QXOUkbwqA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","App","notes","setNotes","list","setList","result","map","note","index","e","target","value"],"sources":["/Users/user/Documents/React.Hillel/react-practice/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState} from \"react\";\n\nfunction App(){\n    // const [workers, setWorkers] = useState([\n    //     {id:1, name: 'Samuel', surname: 'Jacson', count: 20, salary: 130},\n    //     {id:2,name: 'Jam', surname: 'Luise', count: 23, salary: 110},\n    //     {id:3,name: 'Katy', surname: 'Smitt', count: 20, salary: 100},\n    //     {id:4,name: 'Julia', surname: 'Krosbi', count: 22, salary: 140},\n    //     {id:5,name: 'Sam', surname: 'Venson', count: 22, salary: 160}\n    // ])\n    //\n    // const [newValue, setNewValue] = useState('');\n    //\n    //     const countChangeHandler = (e) => {\n    //         setNewValue(e.target.value)\n    //     }\n\n\n    const [notes, setNotes] = useState([1, 2, 3, 4, 5]);\n    const [list,setList] = useState('')\n\n    const result = notes.map((note, index) => {\n        return <p key={index}>{note}</p>;\n    });\n\n\n   // const addHandler = () => {\n   //     setNotes([...notes, result])\n   // }\n\n\n    return(\n            // <table>\n            //     <thead>\n            //     <tr>\n            //         <th> Name </th>\n            //         <th> Surname </th>\n            //         <th> Count days </th>\n            //         <th> Salary per day </th>\n            //         <th> Salary per month </th>\n            //     </tr>\n            //     </thead>\n            //     <tbody>\n            //     {workers.map(worker => (\n            //         <tr key={worker.id}>\n            //             <td>{worker.name}</td>\n            //             <td>{worker.surname}</td>\n            //             <input onChange={countChangeHandler} value={newValue} />\n            //             <button onClick={addItem}>change</button>\n            //             <td>{worker.salary}</td>\n            //             <td>{worker.salary * worker.count}</td>\n            //         </tr>\n            //     ))}\n            //     </tbody>\n            // </table>\n        <div>\n           <p> {result}</p>\n            <input onChange={(e)=>setNotes([...notes, e.target.value])}\n                value={list}/>\n            {/*<button onClick={addHandler}>add</button>*/}\n        </div>\n        )\n\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAc;EAAA;;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAD,CAAlC;EACA,MAAM,CAACI,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;EAEA,MAAMM,MAAM,GAAGJ,KAAK,CAACK,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;IACtC,oBAAO;MAAA,UAAgBD;IAAhB,GAAQC,KAAR;MAAA;MAAA;MAAA;IAAA,QAAP;EACH,CAFc,CAAf,CAnBU,CAwBX;EACA;EACA;;EAGC;IAAA;IACQ;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACJ;MAAA,wBACG;QAAA,gBAAKH,MAAL;MAAA;QAAA;QAAA;QAAA;MAAA,QADH,eAEI;QAAO,QAAQ,EAAGI,CAAD,IAAKP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,CAAC,CAACC,MAAF,CAASC,KAApB,CAAD,CAA9B;QACI,KAAK,EAAER;MADX;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAxBJ;AAgCH;;GA7DQH,G;;KAAAA,G;AA+DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}