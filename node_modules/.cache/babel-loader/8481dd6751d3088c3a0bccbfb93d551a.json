{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/React.Hillel/react-practice/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useMemo, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(1);\n  const [colored, setColored] = useState(false);\n  const styles = {\n    color: colored ? 'darkred' : 'black'\n  };\n\n  const generateItemFromAPI = () => {\n    return new Array(count).fill('').map(i => `element ${i + 1}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles,\n      children: [\"the counting property\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prev => prev + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(prev => prev - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setColored(prev => !prev),\n      children: \"change\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Gsv+KfGt2JyZATH0lXMnLPm8aU4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useMemo","useEffect","App","count","setCount","colored","setColored","styles","color","generateItemFromAPI","Array","fill","map","i","prev"],"sources":["/Users/user/Documents/React.Hillel/react-practice/src/App.js"],"sourcesContent":["import './App.css';\nimport {useState, useMemo, useEffect} from \"react\";\n\n\nfunction App(){\n\n    const [count, setCount] = useState(1)\n    const [colored, setColored] = useState(false)\n\n    const styles = {\n        color: colored ? 'darkred' : 'black'\n    }\n    const generateItemFromAPI = () => {\n        return new Array(count).fill('').map(i => `element ${i+1}`)\n    }\n\n    return(\n            <>\n                <h1 style={styles}>the counting property{count}</h1>\n                <button onClick={()=>setCount(prev=>prev+1)}>+</button>\n                <button onClick={()=>setCount(prev=>prev-1)}>-</button>\n                <button onClick={()=>setColored(prev=>!prev)}>change</button>\n\n            </>\n        )\n\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,QAAR,EAAkBC,OAAlB,EAA2BC,SAA3B,QAA2C,OAA3C;;;;AAGA,SAASC,GAAT,GAAc;EAAA;;EAEV,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;EAEA,MAAMQ,MAAM,GAAG;IACXC,KAAK,EAAEH,OAAO,GAAG,SAAH,GAAe;EADlB,CAAf;;EAGA,MAAMI,mBAAmB,GAAG,MAAM;IAC9B,OAAO,IAAIC,KAAJ,CAAUP,KAAV,EAAiBQ,IAAjB,CAAsB,EAAtB,EAA0BC,GAA1B,CAA8BC,CAAC,IAAK,WAAUA,CAAC,GAAC,CAAE,EAAlD,CAAP;EACH,CAFD;;EAIA,oBACQ;IAAA,wBACI;MAAI,KAAK,EAAEN,MAAX;MAAA,oCAAyCJ,KAAzC;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAE,MAAIC,QAAQ,CAACU,IAAI,IAAEA,IAAI,GAAC,CAAZ,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAQ,OAAO,EAAE,MAAIV,QAAQ,CAACU,IAAI,IAAEA,IAAI,GAAC,CAAZ,CAA7B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ,eAII;MAAQ,OAAO,EAAE,MAAIR,UAAU,CAACQ,IAAI,IAAE,CAACA,IAAR,CAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADR;AAUH;;GAtBQZ,G;;KAAAA,G;AAwBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}